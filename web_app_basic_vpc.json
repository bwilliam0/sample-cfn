{
  "AWSTemplateFormatVersion" : "2010-09-09",
  
  "Description" : "Creates scalable web app environment",
  
  "Mappings" : {
    "TemplateURLMap" : {
      "NATInstance"       : { "URL" : "https://s3-us-west-2.amazonaws.com/cf-templates-1sheeqsxfeeil-us-west-2/nat-instance.json" }
    }
  },
  
  "Resources" : {
    "VPC" : {
      "Type" : "AWS::EC2::VPC",
      "Properties" : {
        "CidrBlock" : "10.0.0.0/16",
        "Tags" : [ { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } }, { "Key" : "Name", "Value" : "VPC" } ]
      }
    },
    
    "PublicSubnetA" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : "10.0.1.0/24",
        "AvailabilityZone" : { "Fn::Select" : [ "0" , { "Fn::GetAZs" : "" } ] },
        "Tags" : [ { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } }, { "Key" : "Name", "Value" : "Public Subnet A" } ]
      }
    },
    
    "PublicSubnetB" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : "10.0.2.0/24",
        "AvailabilityZone" : { "Fn::Select" : [ "1" , { "Fn::GetAZs" : "" } ] },
        "Tags" : [ { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } }, { "Key" : "Name", "Value" : "Public Subnet B" } ]
      }
    },
    
    "InternetGateway" : {
      "Type" : "AWS::EC2::InternetGateway",
      "Properties" : {
        "Tags" : [ { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } }, { "Key" : "Name", "Value" : "Internet Gateway" } ]
      }
    },
    
    "GatewayAttachment" : {
      "Type" : "AWS::EC2::VPCGatewayAttachment",
      "Properties" : {
        "InternetGatewayId" : { "Ref" : "InternetGateway" },
        "VpcId" : { "Ref" : "VPC" }
      }
    },
    
    "PublicSubnetRouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags" : [ { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } }, { "Key" : "Name", "Value" : "Public Subnet Route Table" } ]
      }
    },
    
    "PublicSubnetEgressRoute" : {
      "Type" : "AWS::EC2::Route",
      "DependsOn" : "GatewayAttachment",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PublicSubnetRouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref" : "InternetGateway" }
      }
    },
    
    "SubnetARouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PublicSubnetRouteTable" },
        "SubnetId" : { "Ref" : "PublicSubnetA" }
      }
    },
    
    "SubnetBRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PublicSubnetRouteTable" },
        "SubnetId" : { "Ref" : "PublicSubnetB" }
      }
    },
    
    "NetworkACL" : {
      "Type" : "AWS::EC2::NetworkAcl",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} }, { "Key" : "Name", "Value" : "VPC ACL" } ]
      }
    },
    
    "InboundTrafficEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "NetworkACL"},
        "RuleNumber" : "100",
        "Protocol" : "-1",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : {"From" : "0", "To" : "65535"}
      }
    },
    
    "OutboundTrafficEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "NetworkACL" },
        "RuleNumber" : "110",
        "Protocol" : "-1",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "0", "To" : "65535" }
      }
    },
    
    "PublicSubnetNetworkAclAssociationA" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnetA" },
        "NetworkAclId" : { "Ref" : "NetworkACL" }
      }
    },
    
    "PublicSubnetNetworkAclAssociationB" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnetB" },
        "NetworkAclId" : { "Ref" : "NetworkACL" }
      }
    },
  
    "PrivateSubnetA" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : "10.0.3.0/24",
        "AvailabilityZone" : { "Fn::Select" : [ "0" , { "Fn::GetAZs" : "" } ] },
        "Tags" : [ { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } }, { "Key" : "Name", "Value" : "Private Subnet A" } ]
      }
    },
    
    "PrivateSubnetB" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : "10.0.4.0/24",
        "AvailabilityZone" : { "Fn::Select" : [ "1" , { "Fn::GetAZs" : "" } ] },
        "Tags" : [ { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } }, { "Key" : "Name", "Value" : "Private Subnet B" } ]
      }
    },
    
    "PrivateSubnetRouteTableA" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags" : [ { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } }, { "Key" : "Name", "Value" : "Private Subnet Route Table A" } ]
      }
    },
    
    "PrivateSubnetRouteTableB" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags" : [ { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } }, { "Key" : "Name", "Value" : "Private Subnet Route Table B" } ]
      }
    },
    
    "NATInstanceA" : {
      "Type" : "AWS::CloudFormation::Stack",
      "Properties" : {
        "TemplateURL" : { "Fn::FindInMap" : [ "TemplateURLMap", "NATInstance", "URL" ] },
        "Parameters" : {
          "InstanceType" : "t2.nano",
          "SubnetID" : { "Ref" : "PublicSubnetA" },
          "VpcId" : { "Ref" : "VPC" }
        }
      }
    },
    
    "NATInstanceB" : {
      "Type" : "AWS::CloudFormation::Stack",
      "Properties" : {
        "TemplateURL" : { "Fn::FindInMap" : [ "TemplateURLMap", "NATInstance", "URL" ] },
        "Parameters" : {
          "InstanceType" : "t2.nano",
          "SubnetID" : { "Ref" : "PublicSubnetB" },
          "VpcId" : { "Ref" : "VPC" }
        }
      }
    },
    
    "PrivateSubnetAEgressRoute" : {
      "Type" : "AWS::EC2::Route",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateSubnetRouteTableA" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "InstanceId" : { "Fn::GetAtt" : [ "NATInstanceA", "Outputs.NATInstanceId" ] }
      }
    },
    
    "PrivateSubnetBEgressRoute" : {
      "Type" : "AWS::EC2::Route",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateSubnetRouteTableB" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "InstanceId" : { "Fn::GetAtt" : [ "NATInstanceB", "Outputs.NATInstanceId" ] }
      }
    },
    
    "PrivateSubnetARouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateSubnetRouteTableA" },
        "SubnetId" : { "Ref" : "PrivateSubnetA" }
      }
    },
    
    "PrivateSubnetBRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateSubnetRouteTableB" },
        "SubnetId" : { "Ref" : "PrivateSubnetB" }
      }
    },
    
    "PrivateSubnetNetworkAclAssociationA" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PrivateSubnetA" },
        "NetworkAclId" : { "Ref" : "NetworkACL" }
      }
    },
    
    "PrivateSubnetNetworkAclAssociationB" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PrivateSubnetB" },
        "NetworkAclId" : { "Ref" : "NetworkACL" }
      }
    }
  },
  
  "Outputs" : {
    "VpcId" : {
      "Description" : "The ID of the VPC created by this stack",
      "Value" : { "Ref" : "VPC" }
    },
    "PublicSubnetAId" : {
      "Description" : "The ID of public subnet A",
      "Value" : { "Ref" : "PublicSubnetA" }
    },
    "PublicSubnetBId" : {
      "Description" : "The ID of public subnet B",
      "Value" : { "Ref" : "PublicSubnetB" }
    },
    "PrivateSubnetAId" : {
      "Description" : "The ID of private subnet A",
      "Value" : { "Ref" : "PrivateSubnetA" }
    },
    "PrivateSubnetBId" : {
      "Description" : "The ID of private subnet B",
      "Value" : { "Ref" : "PrivateSubnetB" }
    }
  }
}